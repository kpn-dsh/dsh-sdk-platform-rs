/*
 * DSH Tenant Resource Management REST API
 *
 * Resource management API for DSH
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "name")]
pub enum LimitValue {
    #[serde(rename = "cpu")]
    Cpu(Box<models::LimitValueCpu>),
    #[serde(rename = "mem")]
    Mem(Box<models::LimitValueMem>),
    #[serde(rename = "certificateCount")]
    CertificateCount(Box<models::LimitValueCertificateCount>),
    #[serde(rename = "secretCount")]
    SecretCount(Box<models::LimitValueSecretCount>),
    #[serde(rename = "topicCount")]
    TopicCount(Box<models::LimitValueTopicCount>),
    #[serde(rename = "partitionCount")]
    PartitionCount(Box<models::LimitValuePartitionCount>),
    #[serde(rename = "consumerRate")]
    ConsumerRate(Box<models::LimitValueConsumerRate>),
    #[serde(rename = "producerRate")]
    ProducerRate(Box<models::LimitValueProducerRate>),
    #[serde(rename = "requestRate")]
    RequestRate(Box<models::LimitValueRequestRate>),
}

impl Default for LimitValue {
    fn default() -> Self {
        Self::Cpu(Default::default())
    }
}
