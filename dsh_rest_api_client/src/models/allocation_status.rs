/*
 * DSH Tenant Resource Management REST API
 *
 * Resource management API for DSH
 *
 * The version of the OpenAPI document: 1.6.6
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AllocationStatus {
    /// pointer to the parent allocation or limit that caused this allocation to be implicitly created
    #[serde(rename = "derivedFrom", skip_serializing_if = "Option::is_none")]
    pub derived_from: Option<String>,
    /// indicates whether configuration and actual state match
    #[serde(rename = "provisioned")]
    pub provisioned: bool,
    #[serde(rename = "notifications")]
    pub notifications: Vec<models::Notification>,
}

impl AllocationStatus {
    pub fn new(provisioned: bool, notifications: Vec<models::Notification>) -> AllocationStatus {
        AllocationStatus {
            derived_from: None,
            provisioned,
            notifications,
        }
    }
}
